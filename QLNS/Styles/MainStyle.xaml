<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <!--  xmlns:local="clr-namespace:QLNS.Styles">  -->

    <!--  Start: Pop-up Button Style  -->
    <Style x:Key="PopupButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End: Pop-up Button Style  -->

    <!--  Start: iToggleButton Style  -->
    <Style x:Key="iToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Viewbox
                            Width="20"
                            Height="20"
                            Margin="0,6,0,0"
                            Stretch="UniformToFill">
                            <Canvas Width="512" Height="512">
                                <Path
                                    Margin="0,0,0,0"
                                    Data="m32 0h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0"
                                    Fill="{DynamicResource PrimaryIconColor}" />
                                <Path
                                    Margin="0,20,0,0"
                                    Data="m32 128h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0"
                                    Fill="{DynamicResource PrimaryIconColor}" />
                                <Path
                                    Margin="0,40,0,0"
                                    Data="m32 256h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0"
                                    Fill="{DynamicResource PrimaryIconColor}" />
                            </Canvas>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End: iToggleButton Style  -->

    <!--  Start: Button Close | Restore | Minimize  -->
    <Style x:Key="IconButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="bd"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <Path
                            Name="ico"
                            Width="10"
                            Height="10"
                            Data="{TemplateBinding Content}"
                            Fill="{DynamicResource PrimaryIconColor}"
                            Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SecundaryBackgroundColor}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Tag" Value="IsCloseButton" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource btnClose}" />
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryTexColor}" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryTexColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End: Button Close | Restore | Minimize  -->

    <!--  Start: Text box search  -->
    <Style x:Key="TextBoxSearchStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource SecundaryBackgroundColor}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="15,10" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBoxBase">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource PrimaryBorderColor}"
                        BorderThickness="1"
                        CornerRadius="20"
                        SnapsToDevicePixels="True">

                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#879FFF" />
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#879FFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End: Text box search  -->

    <!--  Start: Add new Button  -->
    <Style x:Key="addButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundColor}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Width" Value="150" />
        <Setter Property="Height" Value="35" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="13" />
        <!--<Setter Property="Grid.Row" Value="0"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="7">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ClickButtonBackgroundColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  End: Add new Button  -->

    <!--  Start: Text Input Style  -->
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource SecundaryBackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBorderColor}" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Padding" Value="10,8" />
        <Setter Property="VerticalAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBoxBase">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource ClickButtonBackgroundColor}" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource FocusBorderColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    <!--  End: Text Input Style  -->
    <Style x:Key="btnUpdate" TargetType="Button">
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="80"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Background" Value="#879FFF"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#6262E0"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btnCancel" TargetType="Button">
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="80"/>
        <Setter Property="Foreground" Value="#879FFF"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5"
                            BorderThickness="2" BorderBrush="#879FFF">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E3E3E3"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Start: Square button style-->
    <Style x:Key="squareButton" TargetType="Button">
        <Setter Property="Background" Value="White" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Width" Value="150" />
        <Setter Property="Height" Value="35" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="13" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#D3D3D3" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--End: Square button style-->

    <!--Start: Text box style-->
    <Style x:Key="HintTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="#879FFF" />
        <Setter Property="materialDesign:HintAssist.Foreground" Value="#879FFF" />
    </Style>
    <!--End: Text box style-->

    <!--Start: Tab item style-->
    <Style x:Key="TabItemStyle" TargetType="TabItem" BasedOn="{StaticResource MaterialDesignTabItem}">
        <Setter Value="#879FFF" Property="materialDesign:ColorZoneAssist.Foreground" />
        <Setter Value="Custom" Property="materialDesign:ColorZoneAssist.Mode" />
    </Style>
    <!--End: Tab item style-->

    <!--Start: Datepicker style-->
    <Style x:Key="DatePickerStyle" TargetType="DatePicker" BasedOn="{StaticResource MaterialDesignFloatingHintDatePicker}">
        <Setter Property="materialDesign:HintAssist.Foreground" Value="#879FFF" />
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="#879FFF" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="materialDesign:TextFieldAssist.HasFilledTextField" Value="False" />
                    <Condition Property="materialDesign:TextFieldAssist.HasOutlinedTextField" Value="False" />
                    <Condition Property="UIElement.IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Value="#879FFF" Property="BorderBrush" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <!--End: Datepicker style-->

    <!--Start: ComboBox style-->
    <Style x:Key="ComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}">
        <Setter Property="materialDesign:HintAssist.Foreground" Value="#879FFF" />
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="#879FFF" />
    </Style>
    <!--End: ComboBox style-->

    <!--Start: PasswordBox style-->
    <Style x:Key="PasswordBoxStyle" TargetType="PasswordBox" BasedOn="{StaticResource MaterialDesignFloatingHintRevealPasswordBox}">
        <Setter Property="materialDesign:HintAssist.Foreground" Value="#879FFF" />
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="#879FFF" />
    </Style>
    <!--End: PasswordBox style-->

    <!--  Start: Save Button  -->
    <Style x:Key="saveButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundColor}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="35" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="13" />
        <!--<Setter Property="Grid.Row" Value="0"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="7">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ClickButtonBackgroundColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  End: Save Button  -->

    <!--  Start: Cancel Button  -->
    <Style x:Key="cancelButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundColor}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="35" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="7">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ClickButtonBackgroundColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  End: Cancel Button  -->

    <!--  Start: Delete Button  -->
    <Style x:Key="deleteButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource SecundaryBackgroundColor}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="35" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource ErrorBorderColor}" 
                            BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource SecundaryTextColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  End: Delete Button  -->

    <Style x:Key="TextBlockLableInfo" TargetType="TextBlock">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="0 0 0 15"/>
    </Style>
    
    

</ResourceDictionary>