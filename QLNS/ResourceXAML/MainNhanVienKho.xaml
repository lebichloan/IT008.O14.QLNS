<Window x:Class="QLNS.ResourceXAML.MainNhanVienKho"
        xmlns:ctls="clr-namespace:QLNS.Controls"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:QLNS.ResourceXAML"
        mc:Ignorable="d" Name="mainNhanVienKho"
        Title="MainNhanVienKho" Height="650" Width="1000"
        WindowStartupLocation="CenterScreen" WindowStyle="None"
        Background="Transparent" AllowsTransparency="True"
        ResizeMode="NoResize" FontFamily="Poppins" Loaded="mainNhanVienKho_Loaded">

    <Border Background="{DynamicResource PrimaryBackgroundColor}"
            CornerRadius="8">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="55*"/>
                <ColumnDefinition Width="39*"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0"
                    Background="{DynamicResource SecundaryBackgroundColor}"
                    CornerRadius="8 0 0 8">
                <Grid x:Name="GridNav" Width="60">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <ToggleButton x:Name="Tg_Btn" VerticalAlignment="Top" Style="{DynamicResource iToggleButtonStyle}" HorizontalAlignment="Left" BorderThickness="0" Background="Transparent" Margin="15,15,0,0" Height="30" Width="30" Grid.RowSpan="2">
                            <ToggleButton.Triggers>
                                <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                    <BeginStoryboard>
                                        <Storyboard x:Name="HideStackPanel">
                                            <DoubleAnimation Storyboard.TargetName="GridNav" Storyboard.TargetProperty="Width" BeginTime="0:0:0" From="210" To="60" Duration="0:0:0.5">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="ToggleButton.Checked">
                                    <BeginStoryboard>
                                        <Storyboard x:Name="ShowStackPanel">
                                            <DoubleAnimation Storyboard.TargetName="GridNav" Storyboard.TargetProperty="Width" BeginTime="0:0:0" From="60" To="210" Duration="0:0:0.5">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ToggleButton.Triggers>
                        </ToggleButton>
                    </Grid>

                    <!-- Start: MenuItem -->
                    <StackPanel Grid.Row="1" Margin="-1 40 0 20">
                        <Button x:Name="btnHome" Style="{DynamicResource PopupButtonStyle}"  MouseEnter="btnHome_MouseEnter" MouseLeave="btnHome_MouseLeave" Click="btnHome_Click">
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource PrimaryBlueColor}" Icon="{DynamicResource home}" IconWidth="16" Text="Trang chủ" VerticalAlignment="Center"/>
                        </Button>
                        <Button x:Name="btnImport" Style="{DynamicResource PopupButtonStyle}"  MouseEnter="btnImport_MouseEnter" MouseLeave="btnImport_MouseLeave" Click="btnImport_Click">
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource PrimaryBlueColor}" Icon="{DynamicResource supplier}" IconWidth="16" Text="Quản lý nhập hàng" VerticalAlignment="Center"/>
                        </Button>
                        <Button x:Name="btnProduct" Style="{DynamicResource PopupButtonStyle}"  MouseEnter="btnProduct_MouseEnter" MouseLeave="btnProduct_MouseLeave" Click="btnProduct_Click">
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource PrimaryBlueColor}" Icon="{DynamicResource products}" IconWidth="16" Text="Quản lý sản phẩm" VerticalAlignment="Center"/>
                        </Button>
                        <Button x:Name="btnReport" Style="{DynamicResource PopupButtonStyle}"  MouseEnter="btnReport_MouseEnter" MouseLeave="btnReport_MouseLeave" Click="btnReport_Click">
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource PrimaryBlueColor}" Icon="{DynamicResource dashboard}" IconWidth="16" Text="Báo cáo thống kê" VerticalAlignment="Center"/>
                        </Button>
                    </StackPanel>
                    <!-- End: MenuItem -->

                    <!-- Start: Popup User Control -->
                    <Popup x:Name="Popup"  AllowsTransparency="True"  HorizontalOffset="0" VerticalOffset="10">
                        <ctls:UserPopup x:Name="Header" Foreground="{DynamicResource PrimaryIconColor}"/>
                    </Popup>
                    <!-- End: Popup User Control -->

                    <Grid Grid.Row="2">
                        <Button x:Name="btnLogOut" Style="{DynamicResource PopupButtonStyle}"  MouseEnter="btnLogOut_MouseEnter" MouseLeave="btnLogOut_MouseLeave" Click="btnLogOut_Click">
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource PrimaryBlueColor}" Icon="{DynamicResource logout}" IconWidth="16" Text="Đăng xuất" VerticalAlignment="Center"/>
                        </Button>
                    </Grid>

                </Grid>
            </Border>

            <Grid Grid.Column="1" Grid.ColumnSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="44.8"/>
                    <RowDefinition Height="15.2"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Start: Button Close | Restore | Minimize -->
                <StackPanel Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,5,10,0" Height="30" Orientation="Horizontal" FlowDirection="RightToLeft">
                    <Button x:Name="btnClose" Style="{StaticResource IconButtonsStyle}" Content="{DynamicResource close}" Click="btnClose_Click" Tag="IsCloseButton"/>
                    <Button x:Name="btnRestore" Margin="5,0" Click="btnRestore_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource IconButtonsStyle}">
                                <Setter Property="Content" Value="{DynamicResource maximize}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=home, Path=WindowState}" Value="Maximized">
                                        <Setter Property="Content" Value="{DynamicResource restore}"/>
                                        <Setter Property="Content" Value="{DynamicResource restore}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btnMinimize" Style="{DynamicResource IconButtonsStyle}" Content="{DynamicResource minimize}" Click="btnMinimize_Click"/>
                </StackPanel>
                <!-- End: Button Close | Restore | Minimize -->

                <Frame Grid.Row="2"
                       Name="fContainer"
                       Margin="20 -20 20 20"
                       NavigationUIVisibility="Hidden">

                </Frame>

            </Grid>

        </Grid>
    </Border>

</Window>
